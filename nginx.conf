# nginx.conf
# 全局配置
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

# 事件模块配置
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# HTTP模块配置
http {
    # 日志格式定义
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # 基础配置
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # 性能优化
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;
    
    # Gzip 压缩配置
    gzip on;
    gzip_vary on;
    gzip_min_length 1k;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # 隐藏 Nginx 版本信息
    server_tokens off;
    
    # 客户端请求限制
    client_max_body_size 10M;
    client_body_buffer_size 128k;
    
    # 虚拟主机配置
    server {
        listen       80;
        listen  [::]:80;
        server_name  localhost;

        # 访问日志
        access_log  /var/log/nginx/host.access.log  main;

        # 静态资源根目录
        root   /usr/share/nginx/html;
        index  index.html index.htm;

        # 主站点配置
        location / {
            # 启用 gzip
            gzip_static on;
            
            # 解决前端路由问题，避免刷新页面404
            try_files $uri $uri/ /index.html;
            
            # 静态资源缓存策略
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                access_log off;
            }
            
            # HTML文件不缓存
            location ~* \.html$ {
                expires -1;
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                add_header Pragma "no-cache";
            }
        }

        # API 代理配置
        location /prod-api/ {
            proxy_pass http://study-java-container:8084/prod-api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 代理超时配置
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # 禁用缓存
            proxy_buffering off;
            proxy_cache_bypass $http_pragma;
            proxy_cache_revalidate on;
        }

        # 健康检查接口
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # 错误页面配置
        error_page   404              /404.html;
        location = /404.html {
            root   /usr/share/nginx/html;
            internal;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
            internal;
        }

        # 禁止访问隐藏文件
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # 禁止访问备份文件
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }

    # HTTPS 配置示例（如果需要SSL）
    # server {
    #     listen       443 ssl http2;
    #     listen  [::]:443 ssl http2;
    #     server_name  localhost;
    #
    #     ssl_certificate     /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_protocols       TLSv1.2 TLSv1.3;
    #     ssl_ciphers         HIGH:!aNULL:!MD5;
    #     ssl_prefer_server_ciphers on;
    #
    #     # 其他配置与HTTP相同...
    # }
}
