# Docker 容器专用 Nginx 配置 (default.conf) - study-uniapp
server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;

    # 访问日志
    access_log  /var/log/nginx/access.log;
    error_log   /var/log/nginx/error.log;

    # 静态资源根目录
    root   /usr/share/nginx/html;
    index  index.html index.htm;

    # 主站点配置
    location / {
        # 解决前端路由问题，避免刷新页面404
        try_files $uri $uri/ /index.html;
        
        # 启用 gzip
        gzip on;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
        gzip_min_length 1000;
        gzip_comp_level 6;
        
        # 安全头
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    }

    # 静态资源缓存策略
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        
        # 跨域支持
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
    }
    
    # HTML文件不缓存
    location ~* \.html$ {
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        
        # 安全头
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
    }

    # API 代理配置 (可选，如果有后端API服务可以启用)
    # location /prod-api/ {
    #     proxy_pass http://backend-api:8084/prod-api/;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     
    #     # 代理超时配置
    #     proxy_connect_timeout 30s;
    #     proxy_send_timeout 60s;
    #     proxy_read_timeout 60s;
    #     
    #     # 禁用缓存
    #     proxy_buffering off;
    #     proxy_cache_bypass $http_pragma;
    #     proxy_cache_revalidate on;
    #     
    #     # CORS 支持
    #     add_header Access-Control-Allow-Origin "*" always;
    #     add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    #     add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
    #     
    #     # 处理预检请求
    #     if ($request_method = 'OPTIONS') {
    #         add_header Access-Control-Allow-Origin "*";
    #         add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
    #         add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
    #         add_header Access-Control-Max-Age 1728000;
    #         add_header Content-Type "text/plain; charset=utf-8";
    #         add_header Content-Length 0;
    #         return 204;
    #     }
    # }

    # 健康检查接口
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # robots.txt
    location = /robots.txt {
        return 200 "User-agent: *\nDisallow: /api/\nDisallow: /prod-api/\n";
        add_header Content-Type text/plain;
        access_log off;
    }

    # favicon.ico
    location = /favicon.ico {
        access_log off;
        log_not_found off;
        expires 1y;
    }

    # 错误页面配置
    error_page   404              /index.html;
    error_page   500 502 503 504  /50x.html;
    
    location = /50x.html {
        root   /usr/share/nginx/html;
        internal;
    }

    # 禁止访问隐藏文件
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # 禁止访问备份文件
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}
